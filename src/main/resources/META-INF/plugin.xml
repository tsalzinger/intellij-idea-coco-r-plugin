<idea-plugin>
    <id>io.scheinecker.intellij.coco</id>
    <name>Coco/R</name>
    <vendor url="https://github.com/tsalzinger/intellij-idea-coco-r-plugin">Thomas Salzinger</vendor>
    <category>Languages,Tools integration</category>

    <description><![CDATA[
        <p>
        This plugin adds support for Cocol/R language and Coco/R compiler generator.<br>
            For more details about Coco/R please refer to <a href="http://ssw.jku.at/coco/">http://ssw.jku.at/coco/</a>.<br/>
        Any bug reports should be filed on <a href="https://github.com/tsalzinger/intellij-idea-coco-r-plugin">GitHub</a>.
        </p>
        <p>
            <strong>Features:</strong>
            <ul>
                <li>Syntax Highlighting - Customizable via settings page</li>
                <li>Commenter (Block and line comments)</li>
                <li>Syntax Error highlighting (unexpected tokens)</li>
                <li>Reference check (report unresolvable references to characters, tokens and productions)</li>
                <li>Declaration order check (report references to characters and tokens declared after usage)</li>
                <li>Attributes check (productions have to be used with or without attributes according to declaration)</li>
                <li>Highlight unused characters, tokens, pragmas and productions</li>
                <li>Code Folding</li>
                <li>Structure View</li>
                <li>Find usages</li>
                <li>Inplace rename refactorings (Compiler, Characters, Tokens, Pragmas and Productions)</li>
                <li>Brace matching for (), [], {}, &lt;&gt;, &lt;..&gt; and (..)</li>
                <li>Code completion (Compiler, Character, Token, Pragma and Production names)</li>
                <li>Go to declaration</li>
                <li>Go to symbol / Symbol search</li>
            </ul>
        </p>
        <p>
            <strong>Features for Java enabled IDEs:</strong>
            <ul>
                <li>Configurable Java language injection</li>
                <li>Generate Scanner and Parser via menu action</li>
                <li>Warnings and Errors during Coco/R execution are shown within the Problems Tool Window</li>
                <li>Automatic detection of appropriate output folder for generated Java classes</li>
                <li>Automatic detection of package in case no $package directive is present</li>
                <li>Automatic detection of appropriate output root for generated Java classes</li>
                <li>Errors from generated Parser are mapped back to the grammar file</li>
                <li>Go to generated code (for productions)</li>
            </ul>
        </p>
    ]]></description>

    <change-notes><![CDATA[
        <ul>
            <li>Ensure compatibility with 2020.1 EAP</li>
        </ul>
    ]]>
    </change-notes>

    <depends optional="true" config-file="java-support.xml">com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Cocol/R file"
                  language="Cocol/R"
                  extensions="atg;coco;cocor;cocol"
                  implementationClass="me.salzinger.intellij.coco.CocoFileType"
        />
        <lang.parserDefinition language="Cocol/R"
                               implementationClass="me.salzinger.intellij.coco.CocoParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Cocol/R"
                                       implementationClass="me.salzinger.intellij.coco.CocoSyntaxHighlighterFactory"/>
        <lang.braceMatcher language="Cocol/R" implementationClass="me.salzinger.intellij.coco.CocoBraceMatcher"/>

        <psi.referenceContributor implementation="me.salzinger.intellij.coco.reference.CocoReferenceContributor"/>
        <lang.findUsagesProvider language="Cocol/R"
                                 implementationClass="me.salzinger.intellij.coco.CocoFindUsagesProvider"/>


        <lang.refactoringSupport language="Cocol/R"
                                 implementationClass="me.salzinger.intellij.coco.CocoRefactoringProvider"/>
        <codeInsight.lineMarkerProvider language="Cocol/R"
                                        implementationClass="me.salzinger.intellij.coco.CocoLineMarkerProvider"/>

        <lang.psiStructureViewFactory language="Cocol/R"
                                      implementationClass="me.salzinger.intellij.coco.structure.CocoStructureViewFactory"/>


        <gotoSymbolContributor
                implementation="me.salzinger.intellij.coco.symbolcontributor.CocoChooseByNameTokenContributor"/>
        <gotoSymbolContributor
                implementation="me.salzinger.intellij.coco.symbolcontributor.CocoChooseByNameCharacterContributor"/>
        <gotoSymbolContributor
                implementation="me.salzinger.intellij.coco.symbolcontributor.CocoChooseByNameProductionContributor"/>

        <annotator language="Cocol/R" implementationClass="me.salzinger.intellij.coco.CocoAnnotator"/>

        <lang.commenter language="Cocol/R" implementationClass="me.salzinger.intellij.coco.CocoCommenter"/>
        <lang.foldingBuilder language="Cocol/R" implementationClass="me.salzinger.intellij.coco.CocoFoldingBuilder"/>

        <!-- Settings page -->
        <projectService
                serviceImplementation="me.salzinger.intellij.coco.settings.CocoConfiguration"/>
        <colorSettingsPage implementation="me.salzinger.intellij.coco.CocoColorSettingsPage"/>
    </extensions>
    <actions>
        <action id="me.salzinger.intellij.coco.action.NewAtgFileAction"
                class="me.salzinger.intellij.coco.action.NewAtgFileAction">
            <add-to-group group-id="NewGroup"/>
        </action>
    </actions>
</idea-plugin>