<idea-plugin>
    <id>io.scheinecker.intellij.coco</id>
    <name>Coco/R</name>
    <version>1.0.0</version>
    <vendor email="tscheinecker@gmail.com" url="https://github.com/tscheinecker">Thomas Scheinecker</vendor>
    <category>Languages,Tools integration</category>

    <description><![CDATA[
      This plugin adds support for Cocol/R language and Coco/R compiler generator.<br>
      For more details about Coco/R see <a href="http://ssw.jku.at/coco/">http://ssw.jku.at/coco/<a>
    ]]></description>

    <change-notes><![CDATA[
        <p>
        Current features:
        <br>
        <ul>
            <li>Syntax Highlighting - Customizable via settings page</li>
            <li>Commenter (Block and line comments)</li>
            <li>Syntax Error highlighting (unexpected tokens)</li>
            <li>Reference check (report unresolvable references to characters, tokens and productions)</li>
            <li>Declaration order check (report references to characters and tokens declared after usage)</li>
            <li>Attributes check (productions have to be used with or without attributes according to declaration)</li>
            <li>Highlight unused characters, tokens, pragmas and productions</li>
            <li>Code Folding</li>
            <li>Structure View</li>
            <li>Find usages</li>
            <li>Inplace rename refactorings (Compiler, Characters, Tokens, Pragmas and Productions)</li>
            <li>Brace matching for (), [], {}, <>, <..> and (..)</li>
            <li>Code completion (Compiler, Character, Token, Pragma and Production names)</li>
            <li>Go to declaration</li>
            <li>Go to symbol / Symbol search</li>
            <li>Go to generated code (for productions)</li>
            <li>Configurable Java language injection</li>
            <li>Generate Scanner and Parser via menu action</li>
            <li>Automatic detection of appropriate output folder for generated Java classes</li>
            <li>Automatic detection of package in case no $package directive is present)
            <li>Automatic detection of appropriate output root for generated Java classes</li>
            <li>Warnings and Errors during Coco/R execution are shown within the Problems Tool Window</li>
            <li>Errors from generated Parser are mapped back to the grammar file</li>
        </ul>
    ]]>
    </change-notes>

    <depends>com.intellij.modules.java</depends>

    <idea-version since-build="173"/>

    <extensions defaultExtensionNs="com.intellij">
        <fileTypeFactory implementation="at.scheinecker.intellij.coco.CocoFileTypeFactory"/>
        <lang.parserDefinition language="Cocol/R"
                               implementationClass="at.scheinecker.intellij.coco.CocoParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Cocol/R"
                                       implementationClass="at.scheinecker.intellij.coco.CocoSyntaxHighlighterFactory"/>
        <lang.braceMatcher language="Cocol/R" implementationClass="at.scheinecker.intellij.coco.CocoBraceMatcher"/>

        <psi.referenceContributor implementation="at.scheinecker.intellij.coco.reference.CocoReferenceContributor"/>
        <lang.findUsagesProvider language="Cocol/R"
                                 implementationClass="at.scheinecker.intellij.coco.CocoFindUsagesProvider"/>


        <lang.refactoringSupport language="Cocol/R"
                                 implementationClass="at.scheinecker.intellij.coco.CocoRefactoringProvider"/>
        <codeInsight.lineMarkerProvider language="Cocol/R"
                                        implementationClass="at.scheinecker.intellij.coco.CocoLineMarkerProvider"/>

        <lang.psiStructureViewFactory language="Cocol/R"
                                      implementationClass="at.scheinecker.intellij.coco.structure.CocoStructureViewFactory"/>


        <gotoSymbolContributor
                implementation="at.scheinecker.intellij.coco.symbolcontributor.CocoChooseByNameTokenContributor"/>
        <gotoSymbolContributor
                implementation="at.scheinecker.intellij.coco.symbolcontributor.CocoChooseByNameCharacterContributor"/>
        <gotoSymbolContributor
                implementation="at.scheinecker.intellij.coco.symbolcontributor.CocoChooseByNameProductionContributor"/>

        <annotator language="Cocol/R" implementationClass="at.scheinecker.intellij.coco.CocoAnnotator"/>
        <externalAnnotator language="Cocol/R" implementationClass="at.scheinecker.intellij.coco.CocoExternalAnnotator"/>

        <lang.commenter language="Cocol/R" implementationClass="at.scheinecker.intellij.coco.CocoCommenter"/>
        <lang.foldingBuilder language="Cocol/R" implementationClass="at.scheinecker.intellij.coco.CocoFoldingBuilder"/>

        <!-- Java Injection -->
        <languageInjector implementation="at.scheinecker.intellij.coco.CocoJavaInjector"/>
        <multiHostInjector implementation="at.scheinecker.intellij.coco.CocoJavaMultiHostInjector"/>

        <!-- Settings page -->
        <projectConfigurable groupId="language"
                             instance="at.scheinecker.intellij.coco.settings.CocoSettingsConfigurable"
                             id="coco.preferences"
                             nonDefaultProject="true"
                             displayName="Coco/R"/>
        <projectService serviceInterface="at.scheinecker.intellij.coco.settings.CocoConfiguration"
                        serviceImplementation="at.scheinecker.intellij.coco.settings.CocoConfiguration"/>
        <colorSettingsPage implementation="at.scheinecker.intellij.coco.CocoColorSettingsPage"/>
    </extensions>
    <actions>
        <action id="at.scheinecker.intellij.coco.action.NewAtgFileAction"
                class="at.scheinecker.intellij.coco.action.NewAtgFileAction">
            <add-to-group group-id="NewGroup"/>
        </action>
        <group id="coco.Generate">
            <separator/>
            <action id="at.scheinecker.intellij.coco.action.CocoRAction"
                    class="at.scheinecker.intellij.coco.action.CocoRAction"
                    text="Run _Coco/R"
                    description="Runs Coco/R on the given .ATG file"
                    icon="/at/scheinecker/intellij/coco/icons/coco-ico.gif">
                <keyboard-shortcut keymap="$default" first-keystroke="control shift G"/>
            </action>
            <add-to-group group-id="ToolsMenu" anchor="before"
                          relative-to-action="ExternalToolsGroup"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </group>
    </actions>
</idea-plugin>