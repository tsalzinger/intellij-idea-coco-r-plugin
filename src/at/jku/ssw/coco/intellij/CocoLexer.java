/* The following code was generated by JFlex 1.4.3 on 22.06.14 13:12 */

package at.jku.ssw.coco.intellij;

import at.jku.ssw.coco.intellij.psi.CocoTypes;
import com.intellij.lexer.FlexLexer;
import com.intellij.psi.TokenType;
import com.intellij.psi.tree.IElementType;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 22.06.14 13:12 from the specification file
 * <tt>C:/private/src/CocoR-Plugin/src/at/jku/ssw/coco/intellij/Coco.flex</tt>
 */
class CocoLexer implements FlexLexer {
    /**
     * lexical states
     */
    public static final int PARSER = 22;
    public static final int IMPORT_STATE = 4;
    public static final int CHARACTERS = 12;
    public static final int COMPILER = 6;
    public static final int ATTRIBUTES = 26;
    public static final int WHITESPACEDECL = 20;
    public static final int TOKENS = 14;
    public static final int SEM_ACTION = 24;
    public static final int YYINITIAL = 0;
    /**
     * the current lexical state
     */
    private int zzLexicalState = YYINITIAL;
    public static final int BLOCK_COMMENT = 2;
    public static final int GLOBAL = 8;
    public static final int COMMENTDECL = 18;
    public static final int PRAGMAS = 16;
    public static final int SCANNER = 10;
    /**
     * initial size of the lookahead buffer
     */
    private static final int ZZ_BUFFERSIZE = 16384;
    /**
     * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
     * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
     * at the beginning of a line
     * l is of the form l = 2*k, k a non negative integer
     */
    private static final int ZZ_LEXSTATE[] = {
            0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 2, 2, 5, 5,
            6, 6, 7, 7, 2, 2, 8, 8, 9, 9, 10, 10
    };
    /**
     * Translates characters to character classes
     */
    private static final String ZZ_CMAP_PACKED =
            "\11\5\1\2\1\1\1\0\1\2\1\1\16\5\4\0\1\2\1\0" +
                    "\1\6\1\0\1\4\2\0\1\7\1\54\1\32\1\26\1\61\1\0" +
                    "\1\62\1\25\1\3\1\22\11\10\1\0\1\27\1\63\1\60\1\57" +
                    "\2\0\1\11\1\12\1\13\1\14\1\15\1\16\1\31\1\45\1\42" +
                    "\1\4\1\50\1\43\1\40\1\51\1\37\1\41\1\4\1\44\1\47" +
                    "\1\46\1\53\1\4\1\56\1\52\1\55\1\4\1\64\1\17\1\65" +
                    "\1\0\1\4\1\0\1\23\1\23\3\4\1\23\2\4\1\33\3\4" +
                    "\1\34\1\23\1\36\1\35\1\4\1\21\1\4\1\24\1\20\1\23" +
                    "\4\4\1\66\1\30\1\67\1\0\41\5\2\0\4\4\4\0\1\4" +
                    "\2\0\1\5\7\0\1\4\4\0\1\4\5\0\27\4\1\0\37\4" +
                    "\1\0\u01ca\4\4\0\14\4\16\0\5\4\7\0\1\4\1\0\1\4" +
                    "\21\0\160\5\5\4\1\0\2\4\2\0\4\4\10\0\1\4\1\0" +
                    "\3\4\1\0\1\4\1\0\24\4\1\0\123\4\1\0\213\4\1\0" +
                    "\5\5\2\0\236\4\11\0\46\4\2\0\1\4\7\0\47\4\7\0" +
                    "\1\4\1\0\55\5\1\0\1\5\1\0\2\5\1\0\2\5\1\0" +
                    "\1\5\10\0\33\4\5\0\3\4\15\0\5\5\6\0\1\4\4\0" +
                    "\13\5\5\0\53\4\25\5\12\10\4\0\2\4\1\5\143\4\1\0" +
                    "\1\4\10\5\1\0\6\5\2\4\2\5\1\0\4\5\2\4\12\10" +
                    "\3\4\2\0\1\4\17\0\1\5\1\4\1\5\36\4\33\5\2\0" +
                    "\131\4\13\5\1\4\16\0\12\10\41\4\11\5\2\4\4\0\1\4" +
                    "\5\0\26\4\4\5\1\4\11\5\1\4\3\5\1\4\5\5\22\0" +
                    "\31\4\3\5\104\0\1\4\1\0\13\4\67\0\33\5\1\0\4\5" +
                    "\66\4\3\5\1\4\22\5\1\4\7\5\12\4\2\5\2\0\12\10" +
                    "\1\0\7\4\1\0\7\4\1\0\3\5\1\0\10\4\2\0\2\4" +
                    "\2\0\26\4\1\0\7\4\1\0\1\4\3\0\4\4\2\0\1\5" +
                    "\1\4\7\5\2\0\2\5\2\0\3\5\1\4\10\0\1\5\4\0" +
                    "\2\4\1\0\3\4\2\5\2\0\12\10\4\4\7\0\1\4\5\0" +
                    "\3\5\1\0\6\4\4\0\2\4\2\0\26\4\1\0\7\4\1\0" +
                    "\2\4\1\0\2\4\1\0\2\4\2\0\1\5\1\0\5\5\4\0" +
                    "\2\5\2\0\3\5\3\0\1\5\7\0\4\4\1\0\1\4\7\0" +
                    "\12\10\2\5\3\4\1\5\13\0\3\5\1\0\11\4\1\0\3\4" +
                    "\1\0\26\4\1\0\7\4\1\0\2\4\1\0\5\4\2\0\1\5" +
                    "\1\4\10\5\1\0\3\5\1\0\3\5\2\0\1\4\17\0\2\4" +
                    "\2\5\2\0\12\10\1\0\1\4\17\0\3\5\1\0\10\4\2\0" +
                    "\2\4\2\0\26\4\1\0\7\4\1\0\2\4\1\0\5\4\2\0" +
                    "\1\5\1\4\7\5\2\0\2\5\2\0\3\5\10\0\2\5\4\0" +
                    "\2\4\1\0\3\4\2\5\2\0\12\10\1\0\1\4\20\0\1\5" +
                    "\1\4\1\0\6\4\3\0\3\4\1\0\4\4\3\0\2\4\1\0" +
                    "\1\4\1\0\2\4\3\0\2\4\3\0\3\4\3\0\14\4\4\0" +
                    "\5\5\3\0\3\5\1\0\4\5\2\0\1\4\6\0\1\5\16\0" +
                    "\12\10\11\0\1\4\7\0\3\5\1\0\10\4\1\0\3\4\1\0" +
                    "\27\4\1\0\12\4\1\0\5\4\3\0\1\4\7\5\1\0\3\5" +
                    "\1\0\4\5\7\0\2\5\1\0\2\4\6\0\2\4\2\5\2\0" +
                    "\12\10\22\0\2\5\1\0\10\4\1\0\3\4\1\0\27\4\1\0" +
                    "\12\4\1\0\5\4\2\0\1\5\1\4\7\5\1\0\3\5\1\0" +
                    "\4\5\7\0\2\5\7\0\1\4\1\0\2\4\2\5\2\0\12\10" +
                    "\1\0\2\4\17\0\2\5\1\0\10\4\1\0\3\4\1\0\51\4" +
                    "\2\0\1\4\7\5\1\0\3\5\1\0\4\5\1\4\10\0\1\5" +
                    "\10\0\2\4\2\5\2\0\12\10\12\0\6\4\2\0\2\5\1\0" +
                    "\22\4\3\0\30\4\1\0\11\4\1\0\1\4\2\0\7\4\3\0" +
                    "\1\5\4\0\6\5\1\0\1\5\1\0\10\5\22\0\2\5\15\0" +
                    "\60\4\1\5\2\4\7\5\4\0\10\4\10\5\1\0\12\10\47\0" +
                    "\2\4\1\0\1\4\2\0\2\4\1\0\1\4\2\0\1\4\6\0" +
                    "\4\4\1\0\7\4\1\0\3\4\1\0\1\4\1\0\1\4\2\0" +
                    "\2\4\1\0\4\4\1\5\2\4\6\5\1\0\2\5\1\4\2\0" +
                    "\5\4\1\0\1\4\1\0\6\5\2\0\12\10\2\0\4\4\40\0" +
                    "\1\4\27\0\2\5\6\0\12\10\13\0\1\5\1\0\1\5\1\0" +
                    "\1\5\4\0\2\5\10\4\1\0\44\4\4\0\24\5\1\0\2\5" +
                    "\5\4\13\5\1\0\44\5\11\0\1\5\71\0\53\4\24\5\1\4" +
                    "\12\10\6\0\6\4\4\5\4\4\3\5\1\4\3\5\2\4\7\5" +
                    "\3\4\4\5\15\4\14\5\1\4\1\5\12\10\4\5\2\0\46\4" +
                    "\1\0\1\4\5\0\1\4\2\0\53\4\1\0\u014d\4\1\0\4\4" +
                    "\2\0\7\4\1\0\1\4\1\0\4\4\2\0\51\4\1\0\4\4" +
                    "\2\0\41\4\1\0\4\4\2\0\7\4\1\0\1\4\1\0\4\4" +
                    "\2\0\17\4\1\0\71\4\1\0\4\4\2\0\103\4\2\0\3\5" +
                    "\40\0\20\4\20\0\125\4\14\0\u026c\4\2\0\21\4\1\0\32\4" +
                    "\5\0\113\4\3\0\3\4\17\0\15\4\1\0\4\4\3\5\13\0" +
                    "\22\4\3\5\13\0\22\4\2\5\14\0\15\4\1\0\3\4\1\0" +
                    "\2\5\14\0\64\4\40\5\3\0\1\4\3\0\2\4\1\5\2\0" +
                    "\12\10\41\0\3\5\2\0\12\10\6\0\130\4\10\0\51\4\1\5" +
                    "\1\4\5\0\106\4\12\0\35\4\3\0\14\5\4\0\14\5\12\0" +
                    "\12\10\36\4\2\0\5\4\13\0\54\4\4\0\21\5\7\4\2\5" +
                    "\6\0\12\10\46\0\27\4\5\5\4\0\65\4\12\5\1\0\35\5" +
                    "\2\0\1\5\12\10\6\0\12\10\15\0\1\4\130\0\5\5\57\4" +
                    "\21\5\7\4\4\0\12\10\21\0\11\5\14\0\3\5\36\4\15\5" +
                    "\2\4\12\10\54\4\16\5\14\0\44\4\24\5\10\0\12\10\3\0" +
                    "\3\4\12\10\44\4\122\0\3\5\1\0\25\5\4\4\1\5\4\4" +
                    "\3\5\2\4\11\0\300\4\47\5\25\0\4\5\u0116\4\2\0\6\4" +
                    "\2\0\46\4\2\0\6\4\2\0\10\4\1\0\1\4\1\0\1\4" +
                    "\1\0\1\4\1\0\37\4\2\0\65\4\1\0\7\4\1\0\1\4" +
                    "\3\0\3\4\1\0\7\4\3\0\4\4\2\0\6\4\4\0\15\4" +
                    "\5\0\3\4\1\0\7\4\16\0\5\5\32\0\5\5\20\0\2\4" +
                    "\23\0\1\4\13\0\5\5\5\0\6\5\1\0\1\4\15\0\1\4" +
                    "\20\0\15\4\3\0\33\4\25\0\15\5\4\0\1\5\3\0\14\5" +
                    "\21\0\1\4\4\0\1\4\2\0\12\4\1\0\1\4\3\0\5\4" +
                    "\6\0\1\4\1\0\1\4\1\0\1\4\1\0\4\4\1\0\13\4" +
                    "\2\0\4\4\5\0\5\4\4\0\1\4\21\0\51\4\u0a77\0\57\4" +
                    "\1\0\57\4\1\0\205\4\6\0\4\4\3\5\2\4\14\0\46\4" +
                    "\1\0\1\4\5\0\1\4\2\0\70\4\7\0\1\4\17\0\1\5" +
                    "\27\4\11\0\7\4\1\0\7\4\1\0\7\4\1\0\7\4\1\0" +
                    "\7\4\1\0\7\4\1\0\7\4\1\0\7\4\1\0\40\5\57\0" +
                    "\1\4\u01d5\0\3\4\31\0\11\4\6\5\1\0\5\4\2\0\5\4" +
                    "\4\0\126\4\2\0\2\5\2\0\3\4\1\0\132\4\1\0\4\4" +
                    "\5\0\51\4\3\0\136\4\21\0\33\4\65\0\20\4\u0200\0\u19b6\4" +
                    "\112\0\u51cd\4\63\0\u048d\4\103\0\56\4\2\0\u010d\4\3\0\20\4" +
                    "\12\10\2\4\24\0\57\4\1\5\4\0\12\5\1\0\31\4\7\0" +
                    "\1\5\120\4\2\5\45\0\11\4\2\0\147\4\2\0\4\4\1\0" +
                    "\4\4\14\0\13\4\115\0\12\4\1\5\3\4\1\5\4\4\1\5" +
                    "\27\4\5\5\20\0\1\4\7\0\64\4\14\0\2\5\62\4\21\5" +
                    "\13\0\12\10\6\0\22\5\6\4\3\0\1\4\4\0\12\10\34\4" +
                    "\10\5\2\0\27\4\15\5\14\0\35\4\3\0\4\5\57\4\16\5" +
                    "\16\0\1\4\12\10\46\0\51\4\16\5\11\0\3\4\1\5\10\4" +
                    "\2\5\2\0\12\10\6\0\27\4\3\0\1\4\1\5\4\0\60\4" +
                    "\1\5\1\4\3\5\2\4\2\5\5\4\2\5\1\4\1\5\1\4" +
                    "\30\0\3\4\2\0\13\4\5\5\2\0\3\4\2\5\12\0\6\4" +
                    "\2\0\6\4\2\0\6\4\11\0\7\4\1\0\7\4\221\0\43\4" +
                    "\10\5\1\0\2\5\2\0\12\10\6\0\u2ba4\4\14\0\27\4\4\0" +
                    "\61\4\u2104\0\u016e\4\2\0\152\4\46\0\7\4\14\0\5\4\5\0" +
                    "\1\4\1\5\12\4\1\0\15\4\1\0\5\4\1\0\1\4\1\0" +
                    "\2\4\1\0\2\4\1\0\154\4\41\0\u016b\4\22\0\100\4\2\0" +
                    "\66\4\50\0\15\4\3\0\20\5\20\0\7\5\14\0\2\4\30\0" +
                    "\3\4\31\0\1\4\6\0\5\4\1\0\207\4\2\0\1\5\4\0" +
                    "\1\4\13\0\12\10\7\0\32\4\4\0\1\4\1\0\32\4\13\0" +
                    "\131\4\3\0\6\4\2\0\6\4\2\0\6\4\2\0\3\4\3\0" +
                    "\2\4\3\0\2\4\22\0\3\5\4\0";
    /**
     * Translates characters to character classes
     */
    private static final char[] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);
    /**
     * Translates DFA states to action switch labels.
     */
    private static final int[] ZZ_ACTION = zzUnpackAction();
    private static final String ZZ_ACTION_PACKED_0 =
            "\4\0\1\1\4\0\1\2\1\0\1\3\1\4\1\5" +
                    "\1\3\1\6\2\3\3\6\1\7\1\10\1\11\4\6" +
                    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21" +
                    "\1\22\1\23\3\24\1\3\1\4\7\6\6\25\5\1" +
                    "\1\6\1\1\1\6\1\12\6\6\6\2\1\7\3\2" +
                    "\11\26\1\27\1\30\2\0\1\31\2\0\4\6\1\32" +
                    "\4\6\1\33\7\6\6\25\1\27\1\30\1\1\2\6" +
                    "\1\34\1\6\1\35\1\6\1\36\2\6\1\27\1\30" +
                    "\3\2\1\37\3\2\1\27\1\30\6\26\2\0\1\40" +
                    "\1\0\1\41\3\6\1\42\5\6\1\41\3\6\1\42" +
                    "\4\6\3\25\1\42\4\25\1\1\6\6\3\2\1\42" +
                    "\4\2\3\26\1\42\4\26\1\43\1\0\17\6\7\25" +
                    "\1\1\2\6\1\44\1\6\1\45\7\2\7\26\1\0" +
                    "\17\6\7\25\1\1\3\6\7\2\7\26\1\0\3\6" +
                    "\1\46\3\6\1\47\6\6\1\47\6\25\1\47\1\1" +
                    "\1\6\1\50\1\51\6\2\1\47\6\26\1\47\1\6" +
                    "\1\52\1\6\1\53\3\6\1\52\1\6\1\53\2\6" +
                    "\1\25\1\52\1\25\1\53\2\25\1\6\1\2\1\52" +
                    "\1\2\1\53\2\2\1\26\1\52\1\26\1\53\2\26" +
                    "\1\54\3\6\1\54\3\6\1\54\3\25\1\55\1\54" +
                    "\3\2\1\54\3\26\6\6\3\25\3\2\3\26\1\56" +
                    "\1\6\1\57\1\56\1\6\1\57\1\56\1\25\1\57" +
                    "\1\56\1\2\1\57\1\56\1\26\1\57\5\60";
    /**
     * Translates a state to a row index in the transition table
     */
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();
    private static final String ZZ_ROWMAP_PACKED_0 =
            "\0\0\0\70\0\160\0\250\0\340\0\u0118\0\u0150\0\u0188" +
                    "\0\u01c0\0\u01f8\0\u0230\0\u0268\0\u02a0\0\u02d8\0\u0310\0\u0348" +
                    "\0\u0380\0\u03b8\0\u03f0\0\u0428\0\u0460\0\u0498\0\u0268\0\u0268" +
                    "\0\u04d0\0\u0508\0\u0540\0\u0578\0\u0268\0\u0268\0\u0268\0\u0268" +
                    "\0\u0268\0\u0268\0\u0268\0\u0268\0\u0268\0\u0268\0\u05b0\0\u05e8" +
                    "\0\u0620\0\u0658\0\u0690\0\u06c8\0\u0700\0\u0738\0\u0770\0\u07a8" +
                    "\0\u07e0\0\u0818\0\u0850\0\u0888\0\u08c0\0\u08f8\0\u0930\0\u0968" +
                    "\0\u09a0\0\u09d8\0\u0a10\0\u0a48\0\u0a80\0\u0ab8\0\u0af0\0\u0b28" +
                    "\0\u0b60\0\u0b98\0\u0bd0\0\u0c08\0\u0c40\0\u0c78\0\u0cb0\0\u0ce8" +
                    "\0\u0d20\0\u0d58\0\u0d90\0\u0dc8\0\u0e00\0\u0e38\0\u0e70\0\u0ea8" +
                    "\0\u0ee0\0\u0f18\0\u0f50\0\u0f88\0\u0fc0\0\u0ff8\0\u1030\0\u1068" +
                    "\0\u10a0\0\u10d8\0\u1110\0\u0268\0\u1148\0\u0380\0\u0268\0\u1180" +
                    "\0\u11b8\0\u11f0\0\u1228\0\u1260\0\u1298\0\u0268\0\u12d0\0\u1308" +
                    "\0\u1340\0\u1378\0\u0268\0\u13b0\0\u13e8\0\u1420\0\u1458\0\u1490" +
                    "\0\u14c8\0\u1500\0\u1538\0\u1570\0\u15a8\0\u15e0\0\u1618\0\u1650" +
                    "\0\u1688\0\u09a0\0\u16c0\0\u16f8\0\u1730\0\u0268\0\u1768\0\u1500" +
                    "\0\u17a0\0\u06c8\0\u17d8\0\u1810\0\u1848\0\u0ce8\0\u1880\0\u18b8" +
                    "\0\u18f0\0\u0268\0\u1928\0\u1960\0\u1998\0\u19d0\0\u0f18\0\u1a08" +
                    "\0\u1a40\0\u1a78\0\u1ab0\0\u1ae8\0\u1b20\0\u1b58\0\u1b90\0\u0268" +
                    "\0\u1bc8\0\u0348\0\u1c00\0\u1c38\0\u1c70\0\u0348\0\u1ca8\0\u1ce0" +
                    "\0\u1d18\0\u1d50\0\u1d88\0\u06c8\0\u1dc0\0\u1df8\0\u1e30\0\u06c8" +
                    "\0\u1e68\0\u1ea0\0\u1ed8\0\u1f10\0\u1f48\0\u1f80\0\u1fb8\0\u0850" +
                    "\0\u1ff0\0\u2028\0\u2060\0\u2098\0\u20d0\0\u2108\0\u2140\0\u2178" +
                    "\0\u21b0\0\u21e8\0\u2220\0\u2258\0\u2290\0\u22c8\0\u0ce8\0\u2300" +
                    "\0\u2338\0\u2370\0\u23a8\0\u23e0\0\u2418\0\u2450\0\u0f18\0\u2488" +
                    "\0\u24c0\0\u24f8\0\u2530\0\u0268\0\u2568\0\u25a0\0\u25d8\0\u2610" +
                    "\0\u2648\0\u2680\0\u26b8\0\u26f0\0\u2728\0\u2760\0\u2798\0\u27d0" +
                    "\0\u2808\0\u2840\0\u2878\0\u28b0\0\u28e8\0\u2920\0\u2958\0\u2990" +
                    "\0\u29c8\0\u2a00\0\u2a38\0\u2a70\0\u2aa8\0\u2ae0\0\u06c8\0\u2b18" +
                    "\0\u06c8\0\u2b50\0\u2b88\0\u2bc0\0\u2bf8\0\u2c30\0\u2c68\0\u2ca0" +
                    "\0\u2cd8\0\u2d10\0\u2d48\0\u2d80\0\u2db8\0\u2df0\0\u2e28\0\u2e60" +
                    "\0\u2e98\0\u2ed0\0\u2f08\0\u2f40\0\u2f78\0\u2fb0\0\u2fe8\0\u3020" +
                    "\0\u3058\0\u3090\0\u30c8\0\u3100\0\u3138\0\u3170\0\u31a8\0\u31e0" +
                    "\0\u3218\0\u3250\0\u3288\0\u32c0\0\u32f8\0\u3330\0\u3368\0\u33a0" +
                    "\0\u33d8\0\u3410\0\u3448\0\u3480\0\u34b8\0\u34f0\0\u3528\0\u3560" +
                    "\0\u3598\0\u35d0\0\u3608\0\u3640\0\u3678\0\u36b0\0\u36e8\0\u3720" +
                    "\0\u3758\0\u3790\0\u37c8\0\u3800\0\u0348\0\u3838\0\u3870\0\u38a8" +
                    "\0\u0348\0\u38e0\0\u3918\0\u3950\0\u3988\0\u39c0\0\u39f8\0\u06c8" +
                    "\0\u3a30\0\u3a68\0\u3aa0\0\u3ad8\0\u3b10\0\u3b48\0\u0850\0\u3b80" +
                    "\0\u3bb8\0\u39f8\0\u06c8\0\u3bf0\0\u3c28\0\u3c60\0\u3c98\0\u3cd0" +
                    "\0\u3d08\0\u0ce8\0\u3d40\0\u3d78\0\u3db0\0\u3de8\0\u3e20\0\u3e58" +
                    "\0\u0f18\0\u3e90\0\u0348\0\u3ec8\0\u0348\0\u3f00\0\u3f38\0\u3f70" +
                    "\0\u06c8\0\u3fa8\0\u06c8\0\u3fe0\0\u4018\0\u4050\0\u0850\0\u4088" +
                    "\0\u0850\0\u40c0\0\u40f8\0\u4130\0\u4168\0\u0ce8\0\u41a0\0\u0ce8" +
                    "\0\u41d8\0\u4210\0\u4248\0\u0f18\0\u4280\0\u0f18\0\u42b8\0\u42f0" +
                    "\0\u0348\0\u4328\0\u4360\0\u4398\0\u06c8\0\u43d0\0\u4408\0\u4440" +
                    "\0\u0850\0\u4478\0\u44b0\0\u44e8\0\u06c8\0\u0ce8\0\u4520\0\u4558" +
                    "\0\u4590\0\u0f18\0\u45c8\0\u4600\0\u4638\0\u4670\0\u46a8\0\u46e0" +
                    "\0\u4718\0\u4750\0\u4788\0\u47c0\0\u47f8\0\u4830\0\u4868\0\u48a0" +
                    "\0\u48d8\0\u4910\0\u4948\0\u4980\0\u0348\0\u49b8\0\u0348\0\u06c8" +
                    "\0\u49f0\0\u06c8\0\u0850\0\u4a28\0\u0850\0\u0ce8\0\u4a60\0\u0ce8" +
                    "\0\u0f18\0\u4a98\0\u0f18\0\u0348\0\u06c8\0\u0850\0\u0ce8\0\u0f18";
    /**
     * The transition table of the DFA
     */
    private static final int[] ZZ_TRANS = zzUnpackTrans();
    private static final String ZZ_TRANS_PACKED_0 =
            "\1\14\1\15\1\16\1\17\1\20\1\14\1\21\1\22" +
                    "\1\14\1\23\1\20\1\24\1\20\1\25\1\20\1\14" +
                    "\2\20\1\14\2\20\1\26\2\14\1\27\1\20\1\30" +
                    "\1\31\5\20\1\32\1\33\3\20\1\34\5\20\1\35" +
                    "\2\20\1\36\1\37\1\40\1\41\1\42\1\43\1\44" +
                    "\1\45\1\46\3\47\1\17\2\47\1\50\1\51\16\47" +
                    "\1\52\1\47\1\27\1\47\1\30\21\47\1\35\13\47" +
                    "\1\14\1\15\1\53\1\17\1\54\1\14\1\21\1\22" +
                    "\1\14\1\55\1\54\1\56\1\54\1\57\1\54\1\14" +
                    "\2\54\1\14\2\54\1\26\2\14\1\27\1\54\1\30" +
                    "\6\54\1\60\1\61\3\54\1\62\5\54\1\35\2\54" +
                    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45" +
                    "\1\46\1\14\1\15\1\53\1\17\1\63\1\14\1\21" +
                    "\1\22\1\14\2\63\1\64\1\63\1\65\1\63\1\14" +
                    "\2\63\1\14\2\63\1\26\2\14\1\27\1\63\1\30" +
                    "\6\63\1\66\1\67\3\63\1\70\5\63\1\35\2\63" +
                    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45" +
                    "\1\46\3\71\1\72\1\73\1\71\1\74\1\75\1\71" +
                    "\1\55\1\73\1\76\1\73\1\57\1\73\1\71\2\73" +
                    "\1\71\2\73\3\71\1\27\1\54\1\30\4\73\1\54" +
                    "\1\73\1\77\1\100\1\73\2\54\1\62\3\54\2\73" +
                    "\1\35\2\73\11\71\1\14\1\15\1\53\1\17\1\54" +
                    "\1\14\1\21\1\22\1\14\1\55\1\54\1\76\1\54" +
                    "\1\57\1\54\1\14\2\54\1\14\2\54\1\26\2\14" +
                    "\1\27\1\54\1\30\6\54\1\60\1\100\3\54\1\62" +
                    "\5\54\1\35\2\54\1\36\1\37\1\40\1\41\1\42" +
                    "\1\43\1\44\1\45\1\46\1\14\1\15\1\53\1\17" +
                    "\1\54\1\14\1\21\1\22\1\14\1\55\1\54\1\76" +
                    "\1\54\1\57\1\54\1\14\2\54\1\14\2\54\1\26" +
                    "\2\14\1\27\1\54\1\30\6\54\1\60\1\100\3\54" +
                    "\1\62\5\54\1\101\2\54\1\36\1\37\1\40\1\41" +
                    "\1\42\1\43\1\44\1\45\1\46\1\14\1\15\1\53" +
                    "\1\17\1\54\1\14\1\21\1\22\1\14\1\55\1\54" +
                    "\1\76\1\54\1\57\1\102\1\14\2\54\1\14\2\54" +
                    "\1\26\2\14\1\27\1\54\1\30\6\54\1\60\1\100" +
                    "\3\54\1\103\2\54\1\104\2\54\1\35\2\54\1\36" +
                    "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46" +
                    "\1\14\1\15\1\53\1\17\1\54\1\14\1\21\1\22" +
                    "\1\14\1\55\1\54\1\56\1\54\1\57\1\54\1\14" +
                    "\2\54\1\14\2\54\1\26\2\14\1\27\1\54\1\30" +
                    "\6\54\1\60\1\105\3\54\1\62\1\106\4\54\1\101" +
                    "\1\54\1\107\1\36\1\37\1\40\1\41\1\42\1\43" +
                    "\1\44\1\45\1\46\3\110\1\111\2\110\1\112\1\113" +
                    "\3\110\1\114\1\110\1\115\7\110\1\116\4\110\1\30" +
                    "\6\110\1\117\1\120\3\110\1\121\21\110\3\122\1\123" +
                    "\2\122\1\124\1\125\3\122\1\126\1\122\1\127\14\122" +
                    "\1\30\6\122\1\130\1\131\3\122\1\132\5\122\1\35" +
                    "\2\122\1\36\10\122\71\0\1\15\70\0\1\16\70\0" +
                    "\1\133\22\0\1\134\45\0\1\20\1\54\2\0\1\54" +
                    "\6\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\21\20\1\0\2\20\11\0\6\136\1\137\61\136" +
                    "\7\140\1\0\7\140\1\141\50\140\4\0\1\20\1\54" +
                    "\2\0\1\54\6\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\16\20\1\142\2\20\1\0\2\20" +
                    "\15\0\1\20\1\54\2\0\1\54\6\20\1\0\2\20" +
                    "\1\54\2\20\1\135\3\0\1\20\1\0\4\20\1\143" +
                    "\5\20\1\144\6\20\1\0\2\20\15\0\1\20\1\54" +
                    "\2\0\1\54\6\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\16\20\1\145\2\20\1\0\2\20" +
                    "\36\0\1\146\46\0\1\20\1\54\2\0\1\54\6\20" +
                    "\1\0\2\20\1\54\2\20\1\135\3\0\1\20\1\0" +
                    "\1\20\1\147\17\20\1\0\2\20\15\0\1\20\1\54" +
                    "\2\0\1\54\6\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\11\20\1\150\7\20\1\0\2\20" +
                    "\15\0\1\20\1\54\2\0\1\54\6\20\1\0\2\20" +
                    "\1\54\2\20\1\135\3\0\1\151\1\0\21\20\1\0" +
                    "\2\20\15\0\1\20\1\54\2\0\1\54\6\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\4\20" +
                    "\1\152\14\20\1\0\2\20\11\0\3\47\1\0\22\47" +
                    "\1\0\1\47\1\0\1\47\1\0\21\47\1\0\13\47" +
                    "\3\50\1\136\2\50\1\47\17\50\1\136\1\50\1\136" +
                    "\1\50\1\136\21\50\1\136\13\50\3\47\1\140\22\47" +
                    "\1\140\1\47\1\140\1\47\1\140\21\47\1\140\13\47" +
                    "\3\0\1\153\66\0\1\53\71\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\21\54\1\0\2\54" +
                    "\15\0\2\54\2\0\7\54\1\0\5\54\4\0\1\54" +
                    "\1\0\16\54\1\154\2\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\4\54" +
                    "\1\155\5\54\1\156\6\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\16\54" +
                    "\1\157\2\54\1\0\2\54\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\11\54\1\160\7\54" +
                    "\1\0\2\54\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\161\1\0\21\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\4\54" +
                    "\1\162\14\54\1\0\2\54\15\0\2\63\2\0\7\63" +
                    "\1\0\5\63\4\0\1\63\1\0\21\63\1\0\2\63" +
                    "\15\0\2\63\2\0\7\63\1\0\5\63\4\0\1\63" +
                    "\1\0\4\63\1\163\5\63\1\164\6\63\1\0\2\63" +
                    "\15\0\2\63\2\0\7\63\1\0\5\63\4\0\1\63" +
                    "\1\0\16\63\1\165\2\63\1\0\2\63\15\0\2\63" +
                    "\2\0\7\63\1\0\5\63\4\0\1\63\1\0\11\63" +
                    "\1\166\7\63\1\0\2\63\15\0\2\63\2\0\7\63" +
                    "\1\0\5\63\4\0\1\167\1\0\21\63\1\0\2\63" +
                    "\15\0\2\63\2\0\7\63\1\0\5\63\4\0\1\63" +
                    "\1\0\4\63\1\170\14\63\1\0\2\63\11\0\11\71" +
                    "\1\0\1\71\1\0\1\71\1\0\12\71\3\0\4\71" +
                    "\1\0\2\71\1\0\1\71\6\0\2\71\1\0\16\71" +
                    "\1\171\5\71\1\0\1\71\1\0\1\71\1\0\10\71" +
                    "\1\172\1\71\3\0\4\71\1\0\2\71\1\0\1\71" +
                    "\6\0\2\71\1\0\17\71\2\73\2\71\1\73\1\54" +
                    "\1\73\1\54\1\73\1\54\1\73\1\71\5\73\3\71" +
                    "\1\0\1\54\1\0\4\73\1\54\2\73\1\54\1\73" +
                    "\6\54\2\73\1\0\2\73\11\71\6\74\1\71\2\74" +
                    "\1\136\1\74\1\136\1\74\1\136\12\74\3\136\4\74" +
                    "\1\136\2\74\1\136\1\74\6\136\2\74\1\136\13\74" +
                    "\11\71\1\140\1\71\1\140\1\71\1\140\1\71\1\173" +
                    "\10\71\3\140\4\71\1\140\2\71\1\140\1\71\6\140" +
                    "\2\71\1\140\13\71\4\0\2\54\2\0\7\54\1\0" +
                    "\5\54\4\0\1\54\1\0\4\54\1\174\5\54\1\156" +
                    "\6\54\1\0\2\54\11\0\4\71\2\73\2\71\1\73" +
                    "\1\54\1\73\1\54\1\73\1\54\1\73\1\71\5\73" +
                    "\3\71\1\0\1\54\1\0\4\73\1\54\2\73\1\54" +
                    "\1\73\1\160\5\54\2\73\1\0\2\73\11\71\4\0" +
                    "\2\54\2\0\7\54\1\0\5\54\4\0\1\175\1\0" +
                    "\21\54\1\0\2\54\36\0\1\176\46\0\2\54\2\0" +
                    "\7\54\1\0\5\54\4\0\1\54\1\0\11\54\1\177" +
                    "\7\54\1\0\2\54\15\0\2\54\2\0\7\54\1\0" +
                    "\5\54\4\0\1\54\1\0\4\54\1\200\14\54\1\0" +
                    "\2\54\15\0\2\54\2\0\5\54\1\201\1\54\1\0" +
                    "\5\54\4\0\1\54\1\0\21\54\1\0\2\54\15\0" +
                    "\2\54\2\0\6\54\1\202\1\0\5\54\4\0\1\161" +
                    "\1\0\21\54\1\0\2\54\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\21\54\1\0\1\203" +
                    "\1\54\15\0\2\54\2\0\5\54\1\204\1\54\1\0" +
                    "\5\54\4\0\1\54\1\0\21\54\1\0\2\54\11\0" +
                    "\25\110\1\0\4\110\1\0\40\110\1\205\21\110\1\0" +
                    "\1\206\3\110\1\0\35\110\6\112\1\110\16\112\1\136" +
                    "\4\112\1\136\35\112\25\110\1\140\4\110\1\140\62\110" +
                    "\1\0\4\110\1\0\4\110\1\207\5\110\1\210\47\110" +
                    "\1\0\4\110\1\0\16\110\1\211\16\110\25\0\1\146" +
                    "\4\0\1\212\35\0\25\110\1\0\4\110\1\0\11\110" +
                    "\1\213\50\110\1\0\3\110\1\214\1\0\62\110\1\0" +
                    "\4\110\1\0\4\110\1\215\30\110\32\122\1\0\21\122" +
                    "\1\0\2\122\1\0\13\122\1\216\22\122\1\217\3\122" +
                    "\1\0\21\122\1\0\2\122\1\0\10\122\6\124\1\122" +
                    "\23\124\1\136\21\124\1\136\2\124\1\136\10\124\32\122" +
                    "\1\140\21\122\1\140\2\122\1\140\42\122\1\0\4\122" +
                    "\1\220\5\122\1\221\6\122\1\0\2\122\1\0\42\122" +
                    "\1\0\16\122\1\222\2\122\1\0\2\122\1\0\42\122" +
                    "\1\0\11\122\1\223\7\122\1\0\2\122\1\0\41\122" +
                    "\1\224\1\0\21\122\1\0\2\122\1\0\42\122\1\0" +
                    "\4\122\1\225\14\122\1\0\2\122\1\0\10\122\1\133" +
                    "\1\0\66\133\4\0\1\226\4\0\6\226\1\0\2\226" +
                    "\1\0\2\226\1\0\1\227\2\0\1\226\1\0\21\226" +
                    "\1\0\2\226\20\0\1\230\66\0\1\140\1\230\7\0" +
                    "\1\140\1\231\4\140\47\0\1\20\1\54\2\0\1\54" +
                    "\6\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\21\20\1\0\1\232\1\20\15\0\1\20\1\54" +
                    "\2\0\1\54\6\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\5\20\1\233\10\20\1\234\2\20" +
                    "\1\0\2\20\15\0\1\20\1\54\2\0\1\54\1\235" +
                    "\5\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\21\20\1\0\2\20\15\0\1\20\1\54\2\0" +
                    "\1\54\3\20\1\236\2\20\1\0\2\20\1\54\2\20" +
                    "\1\135\3\0\1\20\1\0\21\20\1\0\2\20\15\0" +
                    "\1\20\1\54\2\0\1\54\6\20\1\0\2\20\1\54" +
                    "\2\20\1\135\3\0\1\20\1\0\2\20\1\237\16\20" +
                    "\1\0\2\20\15\0\1\20\1\54\2\0\1\54\1\240" +
                    "\5\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\4\20\1\241\14\20\1\0\2\20\15\0\1\20" +
                    "\1\54\2\0\1\54\6\20\1\0\2\20\1\54\2\20" +
                    "\1\135\3\0\1\20\1\0\16\20\1\242\2\20\1\0" +
                    "\2\20\15\0\1\20\1\54\2\0\1\54\6\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\15\20" +
                    "\1\243\3\20\1\0\2\20\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\21\54\1\0\1\244" +
                    "\1\54\15\0\2\54\2\0\7\54\1\0\5\54\4\0" +
                    "\1\54\1\0\5\54\1\245\10\54\1\246\2\54\1\0" +
                    "\2\54\15\0\2\54\2\0\1\54\1\247\5\54\1\0" +
                    "\5\54\4\0\1\54\1\0\21\54\1\0\2\54\15\0" +
                    "\2\54\2\0\4\54\1\250\2\54\1\0\5\54\4\0" +
                    "\1\54\1\0\21\54\1\0\2\54\15\0\2\54\2\0" +
                    "\1\54\1\251\5\54\1\0\5\54\4\0\1\54\1\0" +
                    "\4\54\1\252\14\54\1\0\2\54\15\0\2\54\2\0" +
                    "\7\54\1\0\5\54\4\0\1\54\1\0\16\54\1\253" +
                    "\2\54\1\0\2\54\15\0\2\54\2\0\7\54\1\0" +
                    "\5\54\4\0\1\54\1\0\15\54\1\254\3\54\1\0" +
                    "\2\54\15\0\2\63\2\0\7\63\1\0\5\63\4\0" +
                    "\1\63\1\0\5\63\1\255\10\63\1\256\2\63\1\0" +
                    "\2\63\15\0\2\63\2\0\1\63\1\257\5\63\1\0" +
                    "\5\63\4\0\1\63\1\0\21\63\1\0\2\63\15\0" +
                    "\2\63\2\0\4\63\1\260\2\63\1\0\5\63\4\0" +
                    "\1\63\1\0\21\63\1\0\2\63\15\0\2\63\2\0" +
                    "\1\63\1\261\5\63\1\0\5\63\4\0\1\63\1\0" +
                    "\4\63\1\262\14\63\1\0\2\63\15\0\2\63\2\0" +
                    "\7\63\1\0\5\63\4\0\1\63\1\0\16\63\1\263" +
                    "\2\63\1\0\2\63\15\0\2\63\2\0\7\63\1\0" +
                    "\5\63\4\0\1\63\1\0\15\63\1\264\3\63\1\0" +
                    "\2\63\11\0\1\171\1\71\7\171\1\133\1\171\1\133" +
                    "\1\171\1\133\12\171\3\133\4\171\1\133\2\171\1\133" +
                    "\1\171\6\133\2\171\1\133\13\171\11\71\1\0\1\71" +
                    "\1\0\1\71\1\0\2\71\1\265\7\71\3\0\4\71" +
                    "\1\0\2\71\1\0\1\71\6\0\2\71\1\0\13\71" +
                    "\4\0\2\54\2\0\7\54\1\0\5\54\4\0\1\54" +
                    "\1\0\5\54\1\266\10\54\1\246\2\54\1\0\2\54" +
                    "\15\0\2\54\2\0\7\54\1\0\5\54\4\0\1\54" +
                    "\1\0\16\54\1\267\2\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\4\54" +
                    "\1\270\14\54\1\0\2\54\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\14\54\1\271\4\54" +
                    "\1\0\2\54\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\16\54\1\272\2\54\1\0\2\54" +
                    "\15\0\2\54\2\0\1\54\1\273\5\54\1\0\5\54" +
                    "\4\0\1\54\1\0\21\54\1\0\2\54\11\0\1\205" +
                    "\1\110\23\205\1\133\4\205\1\133\35\205\25\110\1\0" +
                    "\4\110\1\0\5\110\1\274\10\110\1\275\27\110\1\276" +
                    "\13\110\1\0\4\110\1\0\51\110\1\277\10\110\1\0" +
                    "\4\110\1\0\46\110\1\300\13\110\1\0\4\110\1\0" +
                    "\4\110\1\301\55\110\1\0\4\110\1\0\16\110\1\302" +
                    "\43\110\1\0\4\110\1\0\15\110\1\303\17\110\1\216" +
                    "\1\122\30\216\1\133\21\216\1\133\2\216\1\133\10\216" +
                    "\32\122\1\0\5\122\1\304\10\122\1\305\2\122\1\0" +
                    "\2\122\1\0\21\122\1\306\20\122\1\0\21\122\1\0" +
                    "\2\122\1\0\24\122\1\307\15\122\1\0\21\122\1\0" +
                    "\2\122\1\0\21\122\1\310\20\122\1\0\4\122\1\311" +
                    "\14\122\1\0\2\122\1\0\42\122\1\0\16\122\1\312" +
                    "\2\122\1\0\2\122\1\0\42\122\1\0\15\122\1\313" +
                    "\3\122\1\0\2\122\1\0\10\122\4\0\1\226\4\0" +
                    "\6\226\1\0\2\226\1\0\2\226\1\135\1\0\1\314" +
                    "\1\0\1\226\1\0\21\226\1\0\2\226\40\0\1\314" +
                    "\50\0\7\315\3\0\1\315\51\0\1\20\1\54\2\0" +
                    "\1\54\6\20\1\0\2\20\1\54\2\20\1\135\3\0" +
                    "\1\20\1\0\6\20\1\316\12\20\1\0\2\20\15\0" +
                    "\1\20\1\54\2\0\1\54\6\20\1\0\2\20\1\54" +
                    "\2\20\1\135\3\0\1\20\1\0\13\20\1\317\5\20" +
                    "\1\0\2\20\15\0\1\20\1\54\2\0\1\54\6\20" +
                    "\1\0\2\20\1\54\2\20\1\135\3\0\1\20\1\0" +
                    "\11\20\1\320\7\20\1\0\2\20\15\0\1\20\1\54" +
                    "\2\0\1\54\6\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\3\20\1\321\15\20\1\0\2\20" +
                    "\15\0\1\20\1\54\2\0\1\54\6\20\1\0\2\20" +
                    "\1\54\2\20\1\135\3\0\1\322\1\0\21\20\1\0" +
                    "\2\20\15\0\1\20\1\54\2\0\1\54\3\20\1\323" +
                    "\2\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\21\20\1\0\2\20\15\0\1\20\1\54\2\0" +
                    "\1\54\6\20\1\0\2\20\1\54\2\20\1\135\3\0" +
                    "\1\20\1\0\4\20\1\324\14\20\1\0\2\20\15\0" +
                    "\1\20\1\54\2\0\1\54\4\20\1\325\1\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\21\20" +
                    "\1\0\2\20\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\6\54\1\326\12\54\1\0\2\54" +
                    "\15\0\2\54\2\0\7\54\1\0\5\54\4\0\1\54" +
                    "\1\0\13\54\1\327\5\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\11\54" +
                    "\1\330\7\54\1\0\2\54\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\331\1\0\21\54\1\0\2\54" +
                    "\15\0\2\54\2\0\4\54\1\332\2\54\1\0\5\54" +
                    "\4\0\1\54\1\0\21\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\4\54" +
                    "\1\333\14\54\1\0\2\54\15\0\2\54\2\0\5\54" +
                    "\1\334\1\54\1\0\5\54\4\0\1\54\1\0\21\54" +
                    "\1\0\2\54\15\0\2\63\2\0\7\63\1\0\5\63" +
                    "\4\0\1\63\1\0\6\63\1\335\12\63\1\0\2\63" +
                    "\15\0\2\63\2\0\7\63\1\0\5\63\4\0\1\63" +
                    "\1\0\13\63\1\336\5\63\1\0\2\63\15\0\2\63" +
                    "\2\0\7\63\1\0\5\63\4\0\1\63\1\0\11\63" +
                    "\1\337\7\63\1\0\2\63\15\0\2\63\2\0\7\63" +
                    "\1\0\5\63\4\0\1\340\1\0\21\63\1\0\2\63" +
                    "\15\0\2\63\2\0\4\63\1\341\2\63\1\0\5\63" +
                    "\4\0\1\63\1\0\21\63\1\0\2\63\15\0\2\63" +
                    "\2\0\7\63\1\0\5\63\4\0\1\63\1\0\4\63" +
                    "\1\342\14\63\1\0\2\63\15\0\2\63\2\0\5\63" +
                    "\1\343\1\63\1\0\5\63\4\0\1\63\1\0\21\63" +
                    "\1\0\2\63\11\0\10\71\1\344\1\315\1\344\1\315" +
                    "\1\344\1\315\1\344\3\71\1\344\5\71\3\0\4\71" +
                    "\1\0\2\71\1\0\1\71\6\0\2\71\1\0\13\71" +
                    "\4\0\2\54\2\0\7\54\1\0\5\54\4\0\1\54" +
                    "\1\0\5\54\1\345\1\326\12\54\1\0\2\54\15\0" +
                    "\2\54\2\0\7\54\1\0\5\54\4\0\1\54\1\0" +
                    "\4\54\1\346\14\54\1\0\2\54\15\0\2\54\2\0" +
                    "\7\54\1\0\5\54\4\0\1\54\1\0\5\54\1\347" +
                    "\13\54\1\0\2\54\15\0\2\54\2\0\7\54\1\0" +
                    "\5\54\4\0\1\54\1\0\13\54\1\350\5\54\1\0" +
                    "\2\54\15\0\2\54\2\0\3\54\1\244\3\54\1\0" +
                    "\5\54\4\0\1\54\1\0\21\54\1\0\2\54\15\0" +
                    "\2\54\2\0\7\54\1\0\5\54\4\0\1\54\1\0" +
                    "\15\54\1\351\3\54\1\0\2\54\11\0\25\110\1\0" +
                    "\4\110\1\0\6\110\1\352\53\110\1\0\4\110\1\0" +
                    "\13\110\1\353\46\110\1\0\4\110\1\0\11\110\1\354" +
                    "\50\110\1\0\3\110\1\355\1\0\51\110\1\356\10\110" +
                    "\1\0\4\110\1\0\62\110\1\0\4\110\1\0\4\110" +
                    "\1\357\45\110\1\360\7\110\1\0\4\110\1\0\35\110" +
                    "\32\122\1\0\6\122\1\361\12\122\1\0\2\122\1\0" +
                    "\42\122\1\0\13\122\1\362\5\122\1\0\2\122\1\0" +
                    "\42\122\1\0\11\122\1\363\7\122\1\0\2\122\1\0" +
                    "\41\122\1\364\1\0\21\122\1\0\2\122\1\0\24\122" +
                    "\1\365\15\122\1\0\21\122\1\0\2\122\1\0\42\122" +
                    "\1\0\4\122\1\366\14\122\1\0\2\122\1\0\25\122" +
                    "\1\367\14\122\1\0\21\122\1\0\2\122\1\0\10\122" +
                    "\10\0\7\370\3\0\1\370\51\0\1\20\1\54\2\0" +
                    "\1\54\6\20\1\0\2\20\1\54\2\20\1\135\3\0" +
                    "\1\20\1\0\7\20\1\371\11\20\1\0\2\20\15\0" +
                    "\1\20\1\54\2\0\1\54\4\20\1\372\1\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\21\20" +
                    "\1\0\2\20\15\0\1\20\1\54\2\0\1\54\1\373" +
                    "\5\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\21\20\1\0\2\20\15\0\1\20\1\54\2\0" +
                    "\1\54\6\20\1\0\1\20\1\374\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\21\20\1\0\2\20\15\0\1\20" +
                    "\1\54\2\0\1\54\6\20\1\0\2\20\1\54\2\20" +
                    "\1\135\3\0\1\20\1\0\5\20\1\375\13\20\1\0" +
                    "\2\20\15\0\1\20\1\54\2\0\1\54\6\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\20\20" +
                    "\1\376\1\0\2\20\15\0\1\20\1\54\2\0\1\54" +
                    "\6\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\11\20\1\377\7\20\1\0\2\20\15\0\1\20" +
                    "\1\54\2\0\1\54\6\20\1\0\2\20\1\54\2\20" +
                    "\1\135\3\0\1\20\1\0\16\20\1\u0100\2\20\1\0" +
                    "\2\20\15\0\2\54\2\0\7\54\1\0\5\54\4\0" +
                    "\1\54\1\0\7\54\1\u0101\11\54\1\0\2\54\15\0" +
                    "\2\54\2\0\5\54\1\u0102\1\54\1\0\5\54\4\0" +
                    "\1\54\1\0\21\54\1\0\2\54\15\0\2\54\2\0" +
                    "\1\54\1\u0103\5\54\1\0\5\54\4\0\1\54\1\0" +
                    "\21\54\1\0\2\54\15\0\2\54\2\0\7\54\1\0" +
                    "\5\54\4\0\1\54\1\0\5\54\1\u0104\13\54\1\0" +
                    "\2\54\15\0\2\54\2\0\7\54\1\0\5\54\4\0" +
                    "\1\54\1\0\20\54\1\u0105\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\11\54" +
                    "\1\u0106\7\54\1\0\2\54\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\16\54\1\u0107\2\54" +
                    "\1\0\2\54\15\0\2\63\2\0\7\63\1\0\5\63" +
                    "\4\0\1\63\1\0\7\63\1\u0108\11\63\1\0\2\63" +
                    "\15\0\2\63\2\0\5\63\1\u0109\1\63\1\0\5\63" +
                    "\4\0\1\63\1\0\21\63\1\0\2\63\15\0\2\63" +
                    "\2\0\1\63\1\u010a\5\63\1\0\5\63\4\0\1\63" +
                    "\1\0\21\63\1\0\2\63\15\0\2\63\2\0\7\63" +
                    "\1\0\5\63\4\0\1\63\1\0\5\63\1\u010b\13\63" +
                    "\1\0\2\63\15\0\2\63\2\0\7\63\1\0\5\63" +
                    "\4\0\1\63\1\0\20\63\1\u010c\1\0\2\63\15\0" +
                    "\2\63\2\0\7\63\1\0\5\63\4\0\1\63\1\0" +
                    "\11\63\1\u010d\7\63\1\0\2\63\15\0\2\63\2\0" +
                    "\7\63\1\0\5\63\4\0\1\63\1\0\16\63\1\u010e" +
                    "\2\63\1\0\2\63\11\0\10\71\1\u010f\1\370\1\u010f" +
                    "\1\370\1\u010f\1\370\1\u010f\3\71\1\u010f\5\71\3\0" +
                    "\4\71\1\0\2\71\1\0\1\71\6\0\2\71\1\0" +
                    "\13\71\4\0\2\54\2\0\5\54\1\u0110\1\54\1\0" +
                    "\5\54\4\0\1\54\1\0\21\54\1\0\2\54\15\0" +
                    "\2\54\2\0\7\54\1\0\5\54\4\0\1\54\1\0" +
                    "\11\54\1\u0111\7\54\1\0\2\54\15\0\2\54\2\0" +
                    "\5\54\1\u0112\1\54\1\0\5\54\4\0\1\54\1\0" +
                    "\21\54\1\0\2\54\11\0\25\110\1\0\4\110\1\0" +
                    "\7\110\1\u0113\42\110\1\u0114\7\110\1\0\4\110\1\0" +
                    "\46\110\1\u0115\13\110\1\0\4\110\1\0\62\110\1\0" +
                    "\4\110\1\0\5\110\1\u0116\54\110\1\0\4\110\1\0" +
                    "\20\110\1\u0117\41\110\1\0\4\110\1\0\11\110\1\u0118" +
                    "\50\110\1\0\4\110\1\0\16\110\1\u0119\16\110\32\122" +
                    "\1\0\7\122\1\u011a\11\122\1\0\2\122\1\0\25\122" +
                    "\1\u011b\14\122\1\0\21\122\1\0\2\122\1\0\21\122" +
                    "\1\u011c\20\122\1\0\21\122\1\0\2\122\1\0\42\122" +
                    "\1\0\5\122\1\u011d\13\122\1\0\2\122\1\0\42\122" +
                    "\1\0\20\122\1\u011e\1\0\2\122\1\0\42\122\1\0" +
                    "\11\122\1\u011f\7\122\1\0\2\122\1\0\42\122\1\0" +
                    "\16\122\1\u0120\2\122\1\0\2\122\1\0\10\122\10\0" +
                    "\7\u0121\3\0\1\u0121\51\0\1\20\1\54\2\0\1\54" +
                    "\6\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\10\20\1\u0122\10\20\1\0\2\20\15\0\1\20" +
                    "\1\54\2\0\1\54\6\20\1\0\2\20\1\54\2\20" +
                    "\1\135\3\0\1\20\1\0\17\20\1\u0123\1\20\1\0" +
                    "\2\20\15\0\1\20\1\54\2\0\1\54\2\20\1\u0124" +
                    "\3\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\21\20\1\0\2\20\15\0\1\20\1\54\2\0" +
                    "\1\54\6\20\1\0\2\20\1\54\1\20\1\u0125\1\135" +
                    "\3\0\1\20\1\0\21\20\1\0\2\20\15\0\1\20" +
                    "\1\54\2\0\1\54\1\u0126\5\20\1\0\2\20\1\54" +
                    "\2\20\1\135\3\0\1\20\1\0\21\20\1\0\2\20" +
                    "\15\0\1\20\1\54\2\0\1\54\2\20\1\u0127\3\20" +
                    "\1\0\2\20\1\54\2\20\1\135\3\0\1\20\1\0" +
                    "\21\20\1\0\2\20\15\0\1\20\1\54\2\0\1\54" +
                    "\4\20\1\u0128\1\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\21\20\1\0\2\20\15\0\1\20" +
                    "\1\54\2\0\1\54\6\20\1\0\2\20\1\54\2\20" +
                    "\1\135\3\0\1\20\1\0\14\20\1\u0129\4\20\1\0" +
                    "\2\20\15\0\2\54\2\0\7\54\1\0\5\54\4\0" +
                    "\1\54\1\0\10\54\1\u012a\10\54\1\0\2\54\15\0" +
                    "\2\54\2\0\7\54\1\0\5\54\4\0\1\54\1\0" +
                    "\17\54\1\u012b\1\54\1\0\2\54\15\0\2\54\2\0" +
                    "\3\54\1\u012c\3\54\1\0\5\54\4\0\1\54\1\0" +
                    "\21\54\1\0\2\54\15\0\2\54\2\0\1\54\1\u012d" +
                    "\5\54\1\0\5\54\4\0\1\54\1\0\21\54\1\0" +
                    "\2\54\15\0\2\54\2\0\3\54\1\u012e\3\54\1\0" +
                    "\5\54\4\0\1\54\1\0\21\54\1\0\2\54\15\0" +
                    "\2\54\2\0\5\54\1\u012f\1\54\1\0\5\54\4\0" +
                    "\1\54\1\0\21\54\1\0\2\54\15\0\2\54\2\0" +
                    "\7\54\1\0\5\54\4\0\1\54\1\0\14\54\1\u0130" +
                    "\4\54\1\0\2\54\15\0\2\63\2\0\7\63\1\0" +
                    "\5\63\4\0\1\63\1\0\10\63\1\u0131\10\63\1\0" +
                    "\2\63\15\0\2\63\2\0\7\63\1\0\5\63\4\0" +
                    "\1\63\1\0\17\63\1\u0132\1\63\1\0\2\63\15\0" +
                    "\2\63\2\0\3\63\1\u0133\3\63\1\0\5\63\4\0" +
                    "\1\63\1\0\21\63\1\0\2\63\15\0\2\63\2\0" +
                    "\1\63\1\u0134\5\63\1\0\5\63\4\0\1\63\1\0" +
                    "\21\63\1\0\2\63\15\0\2\63\2\0\3\63\1\u0135" +
                    "\3\63\1\0\5\63\4\0\1\63\1\0\21\63\1\0" +
                    "\2\63\15\0\2\63\2\0\5\63\1\u0136\1\63\1\0" +
                    "\5\63\4\0\1\63\1\0\21\63\1\0\2\63\15\0" +
                    "\2\63\2\0\7\63\1\0\5\63\4\0\1\63\1\0" +
                    "\14\63\1\u0137\4\63\1\0\2\63\11\0\10\71\1\u0138" +
                    "\1\u0121\1\u0138\1\u0121\1\u0138\1\u0121\1\u0138\3\71\1\u0138" +
                    "\5\71\3\0\4\71\1\0\2\71\1\0\1\71\6\0" +
                    "\2\71\1\0\13\71\4\0\2\54\2\0\7\54\1\0" +
                    "\5\54\4\0\1\54\1\0\16\54\1\u0139\2\54\1\0" +
                    "\2\54\15\0\2\54\2\0\5\54\1\u013a\1\54\1\0" +
                    "\5\54\4\0\1\54\1\0\21\54\1\0\2\54\15\0" +
                    "\2\54\2\0\4\54\1\u013b\2\54\1\0\5\54\4\0" +
                    "\1\54\1\0\21\54\1\0\2\54\11\0\25\110\1\0" +
                    "\4\110\1\0\10\110\1\u013c\51\110\1\0\4\110\1\0" +
                    "\17\110\1\u013d\30\110\1\u013e\11\110\1\0\4\110\1\0" +
                    "\46\110\1\u013f\13\110\1\0\4\110\1\0\50\110\1\u0140" +
                    "\11\110\1\0\4\110\1\0\52\110\1\u0141\7\110\1\0" +
                    "\4\110\1\0\62\110\1\0\4\110\1\0\14\110\1\u0142" +
                    "\20\110\32\122\1\0\10\122\1\u0143\10\122\1\0\2\122" +
                    "\1\0\42\122\1\0\17\122\1\u0144\1\122\1\0\2\122" +
                    "\1\0\23\122\1\u0145\16\122\1\0\21\122\1\0\2\122" +
                    "\1\0\21\122\1\u0146\20\122\1\0\21\122\1\0\2\122" +
                    "\1\0\23\122\1\u0147\16\122\1\0\21\122\1\0\2\122" +
                    "\1\0\25\122\1\u0148\14\122\1\0\21\122\1\0\2\122" +
                    "\1\0\42\122\1\0\14\122\1\u0149\4\122\1\0\2\122" +
                    "\1\0\10\122\10\0\7\140\3\0\1\140\51\0\1\20" +
                    "\1\54\2\0\1\54\4\20\1\u014a\1\20\1\0\2\20" +
                    "\1\54\2\20\1\135\3\0\1\20\1\0\21\20\1\0" +
                    "\2\20\15\0\1\20\1\54\2\0\1\54\6\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\13\20" +
                    "\1\u014b\5\20\1\0\2\20\15\0\1\20\1\54\2\0" +
                    "\1\54\6\20\1\0\2\20\1\54\2\20\1\135\3\0" +
                    "\1\20\1\0\13\20\1\u014c\5\20\1\0\2\20\15\0" +
                    "\1\20\1\54\2\0\1\54\6\20\1\0\2\20\1\54" +
                    "\2\20\1\135\3\0\1\20\1\0\14\20\1\u014d\4\20" +
                    "\1\0\2\20\15\0\1\20\1\54\2\0\1\54\6\20" +
                    "\1\0\2\20\1\54\2\20\1\135\3\0\1\20\1\0" +
                    "\13\20\1\u014e\5\20\1\0\2\20\15\0\1\20\1\54" +
                    "\2\0\1\54\2\20\1\u014f\3\20\1\0\2\20\1\54" +
                    "\2\20\1\135\3\0\1\20\1\0\21\20\1\0\2\20" +
                    "\15\0\2\54\2\0\5\54\1\u0150\1\54\1\0\5\54" +
                    "\4\0\1\54\1\0\21\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\13\54" +
                    "\1\u0151\5\54\1\0\2\54\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\13\54\1\u0152\5\54" +
                    "\1\0\2\54\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\14\54\1\u0153\4\54\1\0\2\54" +
                    "\15\0\2\54\2\0\7\54\1\0\5\54\4\0\1\54" +
                    "\1\0\13\54\1\u0154\5\54\1\0\2\54\15\0\2\54" +
                    "\2\0\3\54\1\u0155\3\54\1\0\5\54\4\0\1\54" +
                    "\1\0\21\54\1\0\2\54\15\0\2\63\2\0\5\63" +
                    "\1\u0156\1\63\1\0\5\63\4\0\1\63\1\0\21\63" +
                    "\1\0\2\63\15\0\2\63\2\0\7\63\1\0\5\63" +
                    "\4\0\1\63\1\0\13\63\1\u0157\5\63\1\0\2\63" +
                    "\15\0\2\63\2\0\7\63\1\0\5\63\4\0\1\63" +
                    "\1\0\13\63\1\u0158\5\63\1\0\2\63\15\0\2\63" +
                    "\2\0\7\63\1\0\5\63\4\0\1\63\1\0\14\63" +
                    "\1\u0159\4\63\1\0\2\63\15\0\2\63\2\0\7\63" +
                    "\1\0\5\63\4\0\1\63\1\0\13\63\1\u015a\5\63" +
                    "\1\0\2\63\15\0\2\63\2\0\3\63\1\u015b\3\63" +
                    "\1\0\5\63\4\0\1\63\1\0\21\63\1\0\2\63" +
                    "\11\0\11\71\1\140\1\71\1\140\1\71\1\140\12\71" +
                    "\3\0\4\71\1\0\2\71\1\0\1\71\6\0\2\71" +
                    "\1\0\13\71\4\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\13\54\1\u015c\5\54\1\0\2\54" +
                    "\11\0\15\110\1\u015d\7\110\1\0\4\110\1\0\62\110" +
                    "\1\0\4\110\1\0\13\110\1\u015e\46\110\1\0\4\110" +
                    "\1\0\13\110\1\u015f\46\110\1\0\4\110\1\0\14\110" +
                    "\1\u0160\45\110\1\0\4\110\1\0\13\110\1\u0161\34\110" +
                    "\1\u0162\11\110\1\0\4\110\1\0\35\110\15\122\1\u0163" +
                    "\14\122\1\0\21\122\1\0\2\122\1\0\42\122\1\0" +
                    "\13\122\1\u0164\5\122\1\0\2\122\1\0\42\122\1\0" +
                    "\13\122\1\u0165\5\122\1\0\2\122\1\0\42\122\1\0" +
                    "\14\122\1\u0166\4\122\1\0\2\122\1\0\42\122\1\0" +
                    "\13\122\1\u0167\5\122\1\0\2\122\1\0\23\122\1\u0168" +
                    "\16\122\1\0\21\122\1\0\2\122\1\0\10\122\4\0" +
                    "\1\20\1\54\2\0\1\54\6\20\1\0\2\20\1\54" +
                    "\2\20\1\135\3\0\1\20\1\0\11\20\1\u0169\7\20" +
                    "\1\0\2\20\15\0\1\20\1\54\2\0\1\54\4\20" +
                    "\1\u016a\1\20\1\0\2\20\1\54\2\20\1\135\3\0" +
                    "\1\20\1\0\21\20\1\0\2\20\15\0\1\20\1\54" +
                    "\2\0\1\54\6\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\7\20\1\u016b\11\20\1\0\2\20" +
                    "\15\0\1\20\1\54\2\0\1\54\1\u016c\5\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\21\20" +
                    "\1\0\2\20\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\11\54\1\u016d\7\54\1\0\2\54" +
                    "\15\0\2\54\2\0\5\54\1\u016e\1\54\1\0\5\54" +
                    "\4\0\1\54\1\0\21\54\1\0\2\54\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\7\54" +
                    "\1\u016f\11\54\1\0\2\54\15\0\2\54\2\0\1\54" +
                    "\1\u0170\5\54\1\0\5\54\4\0\1\54\1\0\21\54" +
                    "\1\0\2\54\15\0\2\63\2\0\7\63\1\0\5\63" +
                    "\4\0\1\63\1\0\11\63\1\u0171\7\63\1\0\2\63" +
                    "\15\0\2\63\2\0\5\63\1\u0172\1\63\1\0\5\63" +
                    "\4\0\1\63\1\0\21\63\1\0\2\63\15\0\2\63" +
                    "\2\0\7\63\1\0\5\63\4\0\1\63\1\0\7\63" +
                    "\1\u0173\11\63\1\0\2\63\15\0\2\63\2\0\1\63" +
                    "\1\u0174\5\63\1\0\5\63\4\0\1\63\1\0\21\63" +
                    "\1\0\2\63\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\14\54\1\u0175\4\54\1\0\2\54" +
                    "\11\0\25\110\1\0\4\110\1\0\11\110\1\u0176\40\110" +
                    "\1\u0177\7\110\1\0\4\110\1\0\62\110\1\0\4\110" +
                    "\1\0\7\110\1\u0178\36\110\1\u0179\13\110\1\0\4\110" +
                    "\1\0\35\110\32\122\1\0\11\122\1\u017a\7\122\1\0" +
                    "\2\122\1\0\25\122\1\u017b\14\122\1\0\21\122\1\0" +
                    "\2\122\1\0\42\122\1\0\7\122\1\u017c\11\122\1\0" +
                    "\2\122\1\0\21\122\1\u017d\20\122\1\0\21\122\1\0" +
                    "\2\122\1\0\10\122\4\0\1\20\1\54\2\0\1\54" +
                    "\6\20\1\0\2\20\1\54\2\20\1\135\3\0\1\20" +
                    "\1\0\11\20\1\u017e\7\20\1\0\2\20\15\0\1\20" +
                    "\1\54\2\0\1\54\6\20\1\0\2\20\1\54\2\20" +
                    "\1\135\3\0\1\20\1\0\4\20\1\u017f\14\20\1\0" +
                    "\2\20\15\0\1\20\1\54\2\0\1\54\6\20\1\0" +
                    "\2\20\1\54\2\20\1\135\3\0\1\20\1\0\14\20" +
                    "\1\u0180\4\20\1\0\2\20\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\11\54\1\u0181\7\54" +
                    "\1\0\2\54\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\4\54\1\u0182\14\54\1\0\2\54" +
                    "\15\0\2\54\2\0\7\54\1\0\5\54\4\0\1\54" +
                    "\1\0\14\54\1\u0183\4\54\1\0\2\54\15\0\2\63" +
                    "\2\0\7\63\1\0\5\63\4\0\1\63\1\0\11\63" +
                    "\1\u0184\7\63\1\0\2\63\15\0\2\63\2\0\7\63" +
                    "\1\0\5\63\4\0\1\63\1\0\4\63\1\u0185\14\63" +
                    "\1\0\2\63\15\0\2\63\2\0\7\63\1\0\5\63" +
                    "\4\0\1\63\1\0\14\63\1\u0186\4\63\1\0\2\63" +
                    "\11\0\25\110\1\0\4\110\1\0\11\110\1\u0187\50\110" +
                    "\1\0\4\110\1\0\4\110\1\u0188\55\110\1\0\4\110" +
                    "\1\0\14\110\1\u0189\20\110\32\122\1\0\11\122\1\u018a" +
                    "\7\122\1\0\2\122\1\0\42\122\1\0\4\122\1\u018b" +
                    "\14\122\1\0\2\122\1\0\42\122\1\0\14\122\1\u018c" +
                    "\4\122\1\0\2\122\1\0\10\122\4\0\1\20\1\54" +
                    "\2\0\1\54\6\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\14\20\1\u018d\4\20\1\0\2\20" +
                    "\15\0\1\20\1\54\2\0\1\54\6\20\1\0\2\20" +
                    "\1\54\2\20\1\135\3\0\1\20\1\0\16\20\1\u018e" +
                    "\2\20\1\0\2\20\15\0\1\20\1\54\2\0\1\54" +
                    "\4\20\1\u018f\1\20\1\0\2\20\1\54\2\20\1\135" +
                    "\3\0\1\20\1\0\21\20\1\0\2\20\15\0\2\54" +
                    "\2\0\7\54\1\0\5\54\4\0\1\54\1\0\14\54" +
                    "\1\u0190\4\54\1\0\2\54\15\0\2\54\2\0\7\54" +
                    "\1\0\5\54\4\0\1\54\1\0\16\54\1\u0191\2\54" +
                    "\1\0\2\54\15\0\2\54\2\0\5\54\1\u0192\1\54" +
                    "\1\0\5\54\4\0\1\54\1\0\21\54\1\0\2\54" +
                    "\15\0\2\63\2\0\7\63\1\0\5\63\4\0\1\63" +
                    "\1\0\14\63\1\u0193\4\63\1\0\2\63\15\0\2\63" +
                    "\2\0\7\63\1\0\5\63\4\0\1\63\1\0\16\63" +
                    "\1\u0194\2\63\1\0\2\63\15\0\2\63\2\0\5\63" +
                    "\1\u0195\1\63\1\0\5\63\4\0\1\63\1\0\21\63" +
                    "\1\0\2\63\11\0\25\110\1\0\4\110\1\0\14\110" +
                    "\1\u0196\45\110\1\0\4\110\1\0\16\110\1\u0197\33\110" +
                    "\1\u0198\7\110\1\0\4\110\1\0\35\110\32\122\1\0" +
                    "\14\122\1\u0199\4\122\1\0\2\122\1\0\42\122\1\0" +
                    "\16\122\1\u019a\2\122\1\0\2\122\1\0\25\122\1\u019b" +
                    "\14\122\1\0\21\122\1\0\2\122\1\0\10\122\4\0" +
                    "\1\20\1\54\2\0\1\54\6\20\1\0\2\20\1\54" +
                    "\2\20\1\135\3\0\1\20\1\0\14\20\1\u019c\4\20" +
                    "\1\0\2\20\15\0\2\54\2\0\7\54\1\0\5\54" +
                    "\4\0\1\54\1\0\14\54\1\u019d\4\54\1\0\2\54" +
                    "\15\0\2\63\2\0\7\63\1\0\5\63\4\0\1\63" +
                    "\1\0\14\63\1\u019e\4\63\1\0\2\63\11\0\25\110" +
                    "\1\0\4\110\1\0\14\110\1\u019f\20\110\32\122\1\0" +
                    "\14\122\1\u01a0\4\122\1\0\2\122\1\0\10\122";
    /* error codes */
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;
    private static final char[] EMPTY_BUFFER = new char[0];
    private static final int YYEOF = -1;
    /* error messages for the codes above */
    private static final String ZZ_ERROR_MSG[] = {
            "Unkown internal scanner error",
            "Error: could not match input",
            "Error: pushback value was too large"
    };
    /**
     * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
     */
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();
    private static final String ZZ_ATTRIBUTE_PACKED_0 =
            "\4\0\1\1\4\0\1\1\1\0\1\11\12\1\2\11" +
                    "\4\1\12\11\65\1\1\11\2\0\1\11\2\0\4\1" +
                    "\1\11\4\1\1\11\22\1\1\11\13\1\1\11\13\1" +
                    "\2\0\1\11\1\0\62\1\1\11\1\0\52\1\1\0" +
                    "\50\1\1\0\177\1";
    private static java.io.Reader zzReader = null; // Fake
    /* user code: */
    StringBuffer blockComment = new StringBuffer();
    int blockCommentLevel = 0;
    int stateBeforeComment = 0;
    int stateBeforeSemAction = 0;
    /**
     * the current state of the DFA
     */
    private int zzState;
    /**
     * this buffer contains the current text to be matched and is
     * the source of the yytext() string
     */
    private CharSequence zzBuffer = "";
    /**
     * this buffer may contains the current text array to be matched when it is cheap to acquire it
     */
    private char[] zzBufferArray;
    /**
     * the textposition at the last accepting state
     */
    private int zzMarkedPos;
    /**
     * the textposition at the last state to be included in yytext
     */
    private int zzPushbackPos;
    /**
     * the current text position in the buffer
     */
    private int zzCurrentPos;
    /**
     * startRead marks the beginning of the yytext() string in the buffer
     */
    private int zzStartRead;
    /**
     * endRead marks the last character in the buffer, that has been read
     * from input
     */
    private int zzEndRead;
    /**
     * zzAtBOL == true <=> the scanner is currently at the beginning of a line
     */
    private boolean zzAtBOL = true;
    /**
     * zzAtEOF == true <=> the scanner is at the EOF
     */
    private boolean zzAtEOF;

    CocoLexer(java.io.Reader in) {
        this.zzReader = in;
    }

    /**
     * Creates a new scanner.
     * There is also java.io.Reader version of this constructor.
     *
     * @param in the java.io.Inputstream to read input from.
     */
    CocoLexer(java.io.InputStream in) {
        this(new java.io.InputStreamReader(in));
    }

    private static int[] zzUnpackAction() {
        int[] result = new int[416];
        int offset = 0;
        offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    private static int[] zzUnpackRowMap() {
        int[] result = new int[416];
        int offset = 0;
        offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;  /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    private static int[] zzUnpackTrans() {
        int[] result = new int[19152];
        int offset = 0;
        offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    private static int[] zzUnpackAttribute() {
        int[] result = new int[416];
        int offset = 0;
        offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    /**
     * Unpacks the compressed character translation table.
     *
     * @param packed the packed character translation table
     * @return the unpacked character translation table
     */
    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[0x10000];
        int i = 0;  /* index in packed string  */
        int j = 0;  /* index in unpacked array */
        while (i < 2292) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do map[j++] = value; while (--count > 0);
        }
        return map;
    }

    public final int getTokenStart() {
        return zzStartRead;
    }

    public final int getTokenEnd() {
        return getTokenStart() + yylength();
    }

    public void reset(CharSequence buffer, int start, int end, int initialState) {
        zzBuffer = buffer;
        zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
        zzCurrentPos = zzMarkedPos = zzStartRead = start;
        zzPushbackPos = 0;
        zzAtEOF = false;
        zzAtBOL = true;
        zzEndRead = end;
        yybegin(initialState);
    }

    /**
     * Refills the input buffer.
     *
     * @return <code>false</code>, iff there was new input.
     * @throws java.io.IOException if any I/O-Error occurs
     */
    private boolean zzRefill() throws java.io.IOException {
        return true;
    }


    /**
     * Returns the current lexical state.
     */
    public final int yystate() {
        return zzLexicalState;
    }


    /**
     * Enters a new lexical state
     *
     * @param newState the new lexical state
     */
    public final void yybegin(int newState) {
        zzLexicalState = newState;
    }


    /**
     * Returns the text matched by the current regular expression.
     */
    public final CharSequence yytext() {
        return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
    }


    /**
     * Returns the character at position <tt>pos</tt> from the
     * matched text.
     * <p>
     * It is equivalent to yytext().charAt(pos), but faster
     *
     * @param pos the position of the character to fetch.
     *            A value from 0 to yylength()-1.
     * @return the character at position pos
     */
    public final char yycharat(int pos) {
        return zzBufferArray != null ? zzBufferArray[zzStartRead + pos] : zzBuffer.charAt(zzStartRead + pos);
    }


    /**
     * Returns the length of the matched text region.
     */
    public final int yylength() {
        return zzMarkedPos - zzStartRead;
    }


    /**
     * Reports an error that occured while scanning.
     *
     * In a wellformed scanner (no or only correct usage of
     * yypushback(int) and a match-all fallback rule) this method
     * will only be called with things that "Can't Possibly Happen".
     * If this method is called, something is seriously wrong
     * (e.g. a JFlex bug producing a faulty scanner etc.).
     *
     * Usual syntax/scanner level error handling should be done
     * in error fallback rules.
     *
     * @param   errorCode  the code of the errormessage to display
     */
    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException e) {
            message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
        }

        throw new Error(message);
    }


    /**
     * Pushes the specified amount of characters back into the input stream.
     *
     * They will be read again by then next call of the scanning method
     *
     * @param number  the number of characters to be read again.
     *                This number must not be greater than yylength()!
     */
    public void yypushback(int number) {
        if (number > yylength())
            zzScanError(ZZ_PUSHBACK_2BIG);

        zzMarkedPos -= number;
    }


    /**
     * Resumes scanning until the next regular expression is matched,
     * the end of input is encountered or an I/O-Error occurs.
     *
     * @return the next token
     * @exception java.io.IOException  if any I/O-Error occurs
     */
    public IElementType advance() throws java.io.IOException {
        int zzInput;
        int zzAction;

        // cached fields:
        int zzCurrentPosL;
        int zzMarkedPosL;
        int zzEndReadL = zzEndRead;
        CharSequence zzBufferL = zzBuffer;
        char[] zzBufferArrayL = zzBufferArray;
        char[] zzCMapL = ZZ_CMAP;

        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;

        while (true) {
            zzMarkedPosL = zzMarkedPos;

            zzAction = -1;

            zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

            zzState = ZZ_LEXSTATE[zzLexicalState];


            zzForAction:
            {
                while (true) {

                    if (zzCurrentPosL < zzEndReadL)
                        zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
                    else if (zzAtEOF) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        // store back cached positions
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        // get translated positions and possibly new buffer
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if (eof) {
                            zzInput = YYEOF;
                            break zzForAction;
                        } else {
                            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
                        }
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                    if (zzNext == -1) break zzForAction;
                    zzState = zzNext;

                    int zzAttributes = zzAttrL[zzState];
                    if ((zzAttributes & 1) == 1) {
                        zzAction = zzState;
                        zzMarkedPosL = zzCurrentPosL;
                        if ((zzAttributes & 8) == 8) break zzForAction;
                    }

                }
            }

            // store back cached position
            zzMarkedPos = zzMarkedPosL;

            switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 19: {
                    return CocoTypes.CURL_CLOSE;
                }
                case 49:
                    break;
                case 33: {
                    return CocoTypes.ANY;
                }
                case 50:
                    break;
                case 18: {
                    return CocoTypes.CURL_OPEN;
                }
                case 51:
                    break;
                case 7: {
                    return CocoTypes.TERMINATOR;
                }
                case 52:
                    break;
                case 15: {
                    yybegin(ATTRIBUTES);
                    return CocoTypes.SMALLER_THEN;
                }
                case 53:
                    break;
                case 48: {
                    yybegin(PARSER);
                    return CocoTypes.PRODUCTIONS;
                }
                case 54:
                    break;
                case 45: {
                    yybegin(COMMENTDECL);
                    return CocoTypes.COMMENTS;
                }
                case 55:
                    break;
                case 36: {
                    return CocoTypes.FROM;
                }
                case 56:
                    break;
                case 31: {
                    yybegin(stateBeforeSemAction);
                    return CocoTypes.SEM_ACTION_END;
                }
                case 57:
                    break;
                case 20: {
                    return CocoTypes.BLOCK_COMMENT;
                }
                case 58:
                    break;
                case 4: {
                    return TokenType.WHITE_SPACE;
                }
                case 59:
                    break;
                case 22: {
                    return CocoTypes.ARBITRARY_TEXT;
                }
                case 60:
                    break;
                case 8: {
                    return CocoTypes.PIPE;
                }
                case 61:
                    break;
                case 41: {
                    return CocoTypes.NESTED;
                }
                case 62:
                    break;
                case 28: {
                    stateBeforeSemAction = yystate();
                    yybegin(SEM_ACTION);
                    return CocoTypes.SEM_ACTION_START;
                }
                case 63:
                    break;
                case 13: {
                    return CocoTypes.PLUS;
                }
                case 64:
                    break;
                case 26: {
                    return CocoTypes.RANGE;
                }
                case 65:
                    break;
                case 27: {
                    blockCommentLevel--;
                    if (blockCommentLevel == 0) {
                        yybegin(stateBeforeComment);
                    }
                    return CocoTypes.BLOCK_COMMENT;
                }
                case 66:
                    break;
                case 37: {
                    return CocoTypes.WEAK;
                }
                case 67:
                    break;
                case 14: {
                    return CocoTypes.MINUS;
                }
                case 68:
                    break;
                case 44: {
                    yybegin(COMPILER);
                    return CocoTypes.COMPILER;
                }
                case 69:
                    break;
                case 2: {
                    return CocoTypes.SEM_ACTION_;
                }
                case 70:
                    break;
                case 21: {
                    yybegin(GLOBAL);
                    return CocoTypes.IDENT;
                }
                case 71:
                    break;
                case 34: {
                    yybegin(YYINITIAL);
                    return CocoTypes.END;
                }
                case 72:
                    break;
                case 47: {
                    yybegin(SCANNER);
                    return CocoTypes.IGNORECASE;
                }
                case 73:
                    break;
                case 42: {
                    yybegin(CHARACTERS);
                    return CocoTypes.CONTEXT;
                }
                case 74:
                    break;
                case 6: {
                    return CocoTypes.IDENT;
                }
                case 75:
                    break;
                case 5: {
                    yybegin(YYINITIAL);
                    return TokenType.WHITE_SPACE;
                }
                case 76:
                    break;
                case 23: {
                    return CocoTypes.LINE_COMMENT;
                }
                case 77:
                    break;
                case 9: {
                    return CocoTypes.PAR_CLOSE;
                }
                case 78:
                    break;
                case 1: {
                    return CocoTypes.JAVACODE;
                }
                case 79:
                    break;
                case 3: {
                    return TokenType.BAD_CHARACTER;
                }
                case 80:
                    break;
                case 39: {
                    yybegin(TOKENS);
                    return CocoTypes.TOKENS_;
                }
                case 81:
                    break;
                case 24: {
                    blockCommentLevel++;
                    if (blockCommentLevel == 1) {
                        stateBeforeComment = yystate();
                        yybegin(BLOCK_COMMENT);
                        return CocoTypes.BLOCK_COMMENT;
                    }
                }
                case 82:
                    break;
                case 16: {
                    return CocoTypes.BRACK_OPEN;
                }
                case 83:
                    break;
                case 11: {
                    yybegin(PARSER);
                    return CocoTypes.GREATER_THEN;
                }
                case 84:
                    break;
                case 10: {
                    return CocoTypes.PAR_OPEN;
                }
                case 85:
                    break;
                case 17: {
                    return CocoTypes.BRACK_CLOSE;
                }
                case 86:
                    break;
                case 35: {
                    yybegin(YYINITIAL);
                    return CocoTypes.IMPORTPATH;
                }
                case 87:
                    break;
                case 29: {
                    return CocoTypes.TO;
                }
                case 88:
                    break;
                case 25: {
                    return CocoTypes.STRING;
                }
                case 89:
                    break;
                case 12: {
                    return CocoTypes.ASSIGNMENT;
                }
                case 90:
                    break;
                case 46: {
                    yybegin(CHARACTERS);
                    return CocoTypes.CHARACTERS_;
                }
                case 91:
                    break;
                case 32: {
                    return CocoTypes.CHAR;
                }
                case 92:
                    break;
                case 43: {
                    yybegin(PRAGMAS);
                    return CocoTypes.PRAGMAS_;
                }
                case 93:
                    break;
                case 40: {
                    yybegin(WHITESPACEDECL);
                    return CocoTypes.IGNORE;
                }
                case 94:
                    break;
                case 38: {
                    yybegin(YYINITIAL);
                    return CocoTypes.IMPORT;
                }
        case 95: break;
        case 30: 
          { return CocoTypes.IF;
          }
        case 96: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
